Pirvulet Mihai Dumitru, 322 CA - Tema 1 PC README

Task 1. Parsare + lookup in routing table

Partea de parsare a fost realizata folosind biblioteca fstream si functia
inet_ntoa pentru a converti o adresa din string in bytes. Pentru lookup am decis
sa merg pe o structura de trie (includes/trie.h) unde alfabetul consta in
simbolurile {0,1}, realizandu-se un lookup foarte eficient in O(1), deoarece
pentru orice adresa vom avea maxim 32 de hop-uri in trie. 

O problema pe care am intampinat-o aici era la entry-urile care aveau acelasi
prefix si o masca de lungime diferita. Pentru a rezolva problema am tinut
cont de lungimea mastii in momentul inserarii, iar la fiecare hop in trie 
prioritizam entry-ul cu masca cea mai mare.

Task 2. Protocolul ARP

Pentru implementarea ARP m-au ajutat foarte mult interventiile de pe forum.
Am realizat 2 functii, una pentru reply si una pentru request.

1) Cand routerul primeste un ARP request, daca ii este destinat lui, trimite inapoi
macul sau. Daca nu ii este destinat lui, va trimite informatia stocata in ARP table.
2) Cand routerul primeste un ARP reply, este actualizat ARP table intern si se
goleste coada de pachete.
3) Cand routerul primeste un pachet IP si nu cunoaste adresa mac a destinatiei,
va face din nou ARP request si va adauga pachetul curent intr-o coada, urmand sa fie
consumaa cand primeste reply-ul.

Task 3. Forwarding

Pentru partea de forward m-am ghidat dupa laboratorul 4 si nu am intampinat
probleme. Functia de checksum folosita este cea din laborator.

Task 4. Protocolul ICMP

Pentru partea de ICMP m-am ghidat dupa laboratorul 5. Singura problema pe care
am intampinat-o a fost la mesajul de timeout, deoarece eu il trimiteam doar atunci
cand primeam un pachet ICMP. Solutia a fost sa construiesc pachetul de la 0 si sa
il completez field cu field, trimitandu-l chiar si cand vine un pachet IP, fara
header ICMP, dar cu ttl 0.